model <- glm(data=testdf, formula=MethLev~PC3, family = "binomial")
R2 <- with(summary(model), 1 - deviance/null.deviance)
R2
plotdfLR <- testdf %>% select(PC3)
plotdfLR %>%
mutate(MethLev = predict(model, plotdfLR, type="response")) %>%
ggplot(aes(x=PC3, y=MethLev)) +
geom_point(data=testdf, aes(x=PC3, y=MethLev, color=MethLev)) +
stat_smooth(method="glm", se=FALSE, method.args = list(family=binomial)) +
scale_x_reverse()
# logistic regression model
testdf <- plotdfBA %>%
mutate(MethLev = if_else(Methane<20, 0, 1))%>%
select(MethLev, PC3)
testdf %>%
ggplot(aes(x=PC3, y=MethLev)) +
geom_point(aes(color=MethLev))
model <- glm(data=testdf, formula=MethLev~PC3, family = "binomial")
R2 <- with(summary(model), 1 - deviance/null.deviance)
R2
plotdfLR <- testdf %>% select(PC3)
plotdfLR %>%
mutate(MethLev = predict(model, plotdfLR, type="response")) %>%
ggplot(aes(x=PC3, y=MethLev)) +
geom_point(data=testdf, aes(x=PC3, y=MethLev, color=MethLev)) +
stat_smooth(method="glm", se=FALSE, method.args = list(family=binomial)) +
scale_x_reverse()
# logistic regression model
testdf <- plotdfBAF %>%
mutate(MethLev = if_else(Methane<20, 0, 1))%>%
select(MethLev, PC3)
model <- glm(data=testdf, formula=MethLev~PC3, family = "binomial")
R2 <- with(summary(model), 1 - deviance/null.deviance)
R2
plotdfLR <- testdf %>% select(PC3)
plotdfLR %>%
mutate(MethLev = predict(model, plotdfLR, type="response")) %>%
ggplot(aes(x=PC3, y=MethLev)) +
geom_point(data=testdf, aes(x=PC3, y=MethLev, color=MethLev)) +
stat_smooth(method="glm", se=FALSE, method.args = list(family=binomial)) +
scale_x_reverse()
# logistic regression model
testdf <- plotdfBA %>%
mutate(MethLev = if_else(Methane<20, 0, 1))%>%
select(MethLev, PC3)
model <- glm(data=testdf, formula=MethLev~PC3, family = "binomial")
R2 <- with(summary(model), 1 - deviance/null.deviance)
R2
plotdfLR <- testdf %>% select(PC3)
plotdfLR %>%
mutate(MethLev = predict(model, plotdfLR, type="response")) %>%
ggplot(aes(x=PC3, y=MethLev)) +
geom_point(data=testdf, aes(x=PC3, y=MethLev, color=MethLev)) +
stat_smooth(method="glm", se=FALSE, method.args = list(family=binomial)) +
scale_x_reverse()
plotdfLR %>%
mutate(MethLev = predict(model, plotdfLR, type="response")) %>%
ggplot(aes(x=PC3, y=MethLev)) +
geom_point(data=testdf, aes(x=PC3, y=MethLev, color=MethLev)) +
stat_smooth(method="glm", se=FALSE, method.args = list(family=binomial)) +
scale_x_reverse() +
theme_bw()
plotdfBAF %>%
mutate(MethLev = if_else(Methane<70, "Low", "High")) %>%
ggplot(aes(x=MethLev, y=PC3)) +
geom_point(aes(color=ROV), size=1, height = 10) +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_cor(aes(label=..rr.label..), p.accuracy =  0.0001) +
stat_cor(aes(label=..p.label..),
p.accuracy =  0.01,
vjust=3) +
theme_bw()
plotdfBAF %>%
mutate(MethLev = if_else(Methane<70, "Low", "High")) %>%
ggplot(aes(x=ROV, y=PC3)) +
geom_point(aes(color=ROV), size=1, height = 10) +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_cor(aes(label=..rr.label..), p.accuracy =  0.0001) +
stat_cor(aes(label=..p.label..),
p.accuracy =  0.01,
vjust=3) +
theme_bw()
plotdfBAF %>%
mutate(MethLev = if_else(Methane<70, "Low", "High")) %>%
ggplot(aes(x=ROV, y=PC3)) +
geom_point(aes(color=ROV), size=1, height = 10) +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_compare_means() +
theme_bw()
plotdfBAF %>%
mutate(MethLev = if_else(Methane<70, "Low", "High")) %>%
ggplot(aes(x=ROV, y=PC3)) +
geom_point(aes(color=ROV), size=1, height = 10) +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_compare_means(method = "ANOVA") +
theme_bw()
plotdfBAF %>%
mutate(MethLev = if_else(Methane<70, "Low", "High")) %>%
ggplot(aes(x=ROV, y=PC3)) +
geom_point(aes(color=ROV), size=1, height = 10) +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_compare_means(method = "anova") +
theme_bw()
plotdfBAF %>%
mutate(MethLev = if_else(Methane<70, "Low", "High")) %>%
ggplot(aes(x=Meth, y=PC3)) +
geom_point(aes(color=ROV), size=1, height = 10) +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_compare_means(method = "anova") +
theme_bw()
plotdfBAF %>%
mutate(MethLev = if_else(Methane<70, "Low", "High")) %>%
ggplot(aes(x=Meth, y=PC3)) +
geom_point(aes(color=ROV), size=1, height = 10) +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
# stat_compare_means(method = "anova") +
theme_bw()
plotdfBAF %>%
mutate(MethLev = if_else(Methane<70, "Low", "High")) %>%
ggplot(aes(x=Methane, y=PC3)) +
geom_point(aes(color=ROV), size=1, height = 10) +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_compare_means(method = "anova") +
theme_bw()
plotdfBAF %>%
mutate(MethLev = if_else(Methane<70, "Low", "High")) %>%
ggplot(aes(x=MethLev, y=PC3)) +
geom_point(aes(color=ROV), size=1, height = 10) +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_compare_means(method = "anova") +
theme_bw()
plotdfBAF %>%
mutate(MethLev = if_else(Methane<70, "Low", "High")) %>%
ggplot(aes(x=ROV, y=PC3)) +
geom_point(aes(color=ROV), size=1, height = 10) +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_compare_means(method = "anova") +
theme_bw()
plotdfBA %>%
mutate(MethLev = if_else(Methane<70, "Low", "High")) %>%
ggplot(aes(x=ROV, y=PC3)) +
geom_point(aes(color=ROV), size=1, height = 10) +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_compare_means(method = "anova") +
theme_bw()
plotdfBA %>%
mutate(MethLev = if_else(Methane<70, "Low", "High")) %>%
ggplot(aes(x=PC3, y=ROV)) +
geom_point(aes(color=ROV), size=1, height = 10) +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_compare_means(method = "anova") +
theme_bw()
plotdfBAF %>%
mutate(MethLev = if_else(Methane<70, "Low", "High")) %>%
ggplot(aes(x=PC3, y=ROV)) +
geom_point(aes(color=ROV), size=1, height = 10) +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_compare_means(method = "anova") +
theme_bw()
plotdfBAF %>%
mutate(MethLev = if_else(Methane<70, "Low", "High")) %>%
ggplot(aes(x=ROV, y=PC3)) +
geom_point(aes(color=ROV), size=1, height = 10) +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_compare_means(method = "anova") +
theme_bw()
plotdfBAF %>%
mutate(MethLev = if_else(Methane<70, "Low", "High")) %>%
ggplot(aes(x=Sulfate, y=PC3)) +
geom_point(aes(color=ROV), size=1, height = 10) +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_compare_means(method = "anova") +
theme_bw()
plotdfBAF %>%
mutate(MethLev = if_else(Methane<70, "Low", "High"),
SulfateLev = if_else(SulfateLev<1000, "Low", "High")) %>%
ggplot(aes(x=SulfateLev, y=PC3)) +
geom_point(aes(color=ROV), size=1, height = 10) +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_compare_means(method = "anova") +
theme_bw()
plotdfBAF %>%
mutate(MethLev = if_else(Methane<70, "Low", "High"),
SulfateLev = if_else(Sulfate<1000, "Low", "High")) %>%
ggplot(aes(x=SulfateLev, y=PC3)) +
geom_point(aes(color=ROV), size=1, height = 10) +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_compare_means(method = "anova") +
theme_bw()
plotdfBAF %>%
mutate(MethLev = if_else(Methane<70, "Low", "High"),
SulfateLev = if_else(Sulfate<1000, "Low", "High")) %>%
ggplot(aes(x=PC3, y=Sulfate)) +
geom_point(aes(color=ROV), size=1, height = 10) +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_compare_means(method = "anova") +
theme_bw()
plotdfBAF %>%
mutate(MethLev = if_else(Methane<70, "Low", "High"),
SulfateLev = if_else(Sulfate<1000, "Low", "High")) %>%
ggplot(aes(x=PC3, y=Sulfate)) +
geom_point(aes(color=ROV), size=1, height = 10) +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_compare_means(method = "anova") +
theme_bw()
plotdfBAF %>%
mutate(MethLev = if_else(Methane<70, "Low", "High"),
SulfateLev = if_else(Sulfate<1000, "Low", "High")) %>%
ggplot(aes(x=Sulfate, y=PC3)) +
geom_point(aes(color=ROV), size=1, height = 10) +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_compare_means(method = "anova") +
theme_bw()
plotdfBAF %>%
mutate(MethLev = if_else(Methane<70, "Low", "High"),
SulfateLev = if_else(Sulfate<1000, "Low", "High")) %>%
ggplot(aes(x=SulfateLev, y=PC3)) +
geom_point(aes(color=ROV), size=1, height = 10) +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_compare_means(method = "anova") +
theme_bw()
plotdfBAF %>%
mutate(MethLev = if_else(Methane<70, "Low", "High"),
SulfateLev = if_else(Sulfate<1000, "Low", "High")) %>%
ggplot(aes(x=SulfateLev, y=PC3)) +
geom_point(aes(color=ROV), size=1, height = 10) +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_compare_means(method = "anova",
comparisons = c("Low", "High")) +
theme_bw()
source("~/git_repo/coldseepfungi/R/17_robustPCA.R")
plotdfBAF %>%
mutate(MethLev = if_else(Methane<70, "Low", "High"),
SulfateLev = if_else(Sulfate<1000, "Low", "High")) %>%
ggplot(aes(x=SulfateLev, y=PC3)) +
geom_point(aes(color=ROV), size=1, height = 10) +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_compare_means(method = "anova",
comparisons = list(c("Low", "High"))) +
theme_bw()
plotdfBAF %>%
mutate(MethLev = if_else(Methane<70, "Low", "High"),
SulfateLev = if_else(Sulfate<1000, "Low", "High")) %>%
ggplot(aes(x=SulfateLev, y=PC3)) +
geom_point(aes(color=ROV), size=1, height = 10) +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_compare_means(method = "anova") +
theme_bw()
plotdfBAF %>%
ggplot(aes(x=PC1, y = `Sequencing.Depth` )) +
geom_point(size=1, color="grey") +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_cor(aes(label=..rr.label..)) +
stat_cor(aes(label=..p.label..),
p.accuracy =  0.01,
vjust=3) +
theme_bw() +
ylab("Sequencing Depth") +
xlab("PC1")
corrplot(corresBA, type = "full",method = 'circle',
tl.col = "black", tl.srt = 45, number.cex=0.5, tl.cex=0.5,
p.mat = corresBA, insig = "blank")
plotdfBAF %>%
ggplot(aes(x=PC1, y = PC2)) +
geom_point(aes(color=ROV)) +
# scale_color_brewer(palette="Set1") +
theme_bw()
plotdfBAF %>%
ggplot(aes(x=PC1, y = `Sequencing.Depth` )) +
geom_point(size=1, color="grey") +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_cor(aes(label=..rr.label..)) +
stat_cor(aes(label=..p.label..),
p.accuracy =  0.01,
vjust=3) +
theme_bw() +
ylab("Sequencing Depth") +
xlab("PC1")
plotdfBAF %>%
ggplot(aes(x=PC1, y = `Sequencing.Depth` )) +
geom_point(size=1, color="grey") +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_cor(aes(label=..rr.label..)) +
stat_cor(aes(label=..p.label..),
p.accuracy =  0.01,
vjust=3) +
theme_bw() +
ylab("Sequencing Depth") +
xlab("PC1")
View(plotdfBAF)
plotdfBAF %>%
ggplot(aes(x=PC1, y = `Sampling Depth (m)` )) +
geom_point(size=1, color="grey") +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_cor(aes(label=..rr.label..)) +
stat_cor(aes(label=..p.label..),
p.accuracy =  0.01,
vjust=3) +
theme_bw() +
ylab("Sequencing Depth") +
xlab("PC1")
corrplot(corresBA, type = "full",method = 'circle',
tl.col = "black", tl.srt = 45, number.cex=0.5, tl.cex=0.5,
p.mat = corresBA, insig = "blank")
corrplot(corresBAF, type = "full",method = 'circle',
tl.col = "black", tl.srt = 45, number.cex=0.5, tl.cex=0.5,
p.mat = corresBA, insig = "blank")
corrplot(corresBA, type = "full",method = 'circle',
tl.col = "black", tl.srt = 45, number.cex=0.5, tl.cex=0.5,
p.mat = corresBA, insig = "blank")
corrplot(corresBAF, type = "full",method = 'circle',
tl.col = "black", tl.srt = 45, number.cex=0.5, tl.cex=0.5,
p.mat = corresBAF, insig = "blank")
plotdfBAF %>%
ggplot(aes(x=PC1, y = PC2)) +
geom_point(aes(color=ROV)) +
# scale_color_brewer(palette="Set1") +
theme_bw()
plotdfBAF %>%
ggplot(aes(x=PC1, y = `Sampling Depth (m)` )) +
geom_point(size=1, color="grey") +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_cor(aes(label=..rr.label..)) +
stat_cor(aes(label=..p.label..),
p.accuracy =  0.01,
vjust=3) +
theme_bw() +
ylab("Sequencing Depth") +
xlab("PC1")
plotdfBA %>%
ggplot(aes(x=PC1, y = `Sampling Depth (m)` )) +
geom_point(size=1, color="grey") +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_cor(aes(label=..rr.label..)) +
stat_cor(aes(label=..p.label..),
p.accuracy =  0.01,
vjust=3) +
theme_bw() +
ylab("Sequencing Depth") +
xlab("PC1")
plotdfBAF %>%
mutate(MethLev = if_else(Methane<70, "Low", "High"),
SulfateLev = if_else(Sulfate<1000, "Low", "High")) %>%
ggplot(aes(x=SulfateLev, y=PC3)) +
geom_point(aes(color=ROV), size=1, height = 10) +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_compare_means(method = "anova") +
theme_bw()
plotdfBAF %>%
mutate(MethLev = if_else(Methane<70, "Low", "High"),
SulfateLev = if_else(Sulfate<1000, "Low", "High")) %>%
ggplot(aes(x=Sulfide, y=PC3)) +
geom_point(aes(color=ROV), size=1, height = 10) +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_compare_means(method = "anova") +
theme_bw()
plotdfBAF %>%
mutate(MethLev = if_else(Methane<70, "Low", "High"),
SulfateLev = if_else(Sulfate<1000, "Low", "High")) %>%
ggplot(aes(x=Sulfate, y=PC3)) +
geom_point(aes(color=ROV), size=1, height = 10) +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_compare_means(method = "anova") +
theme_bw()
plotdfBAF %>%
mutate(MethLev = if_else(Methane<70, "Low", "High"),
SulfateLev = if_else(Sulfate<1000, "Low", "High")) %>%
ggplot(aes(x=SulfateLev, y=PC3)) +
geom_point(aes(color=ROV), size=1, height = 10) +
geom_smooth(formula = y~x, method="glm", color="black", se=FALSE) +
stat_compare_means(method = "anova") +
theme_bw()
corrplot(corresBAF, type = "full",method = 'circle',
tl.col = "black", tl.srt = 45, number.cex=0.5, tl.cex=0.5,
p.mat = corresBAF, insig = "blank")
library(selbal)
data(HIV)
x <- HIV[,1:60]
View(x)
y <- HIV[,62]
View(HIV)
z <- data.frame(MSM = HIV[,61])
View(z)
# Run selbal.cv function (with the default values for zero.rep and opt.cri)
CV.BAL.dic <- selbal.cv(x = x, y = y, n.fold = 5, n.iter = 10,
covar = z, logit.acc = "AUC")
CV.BAL.dic$accuracy.nvar
CV.BAL.dic$var.barplot
grid.draw(CV.BAL.dic$global.plot)
CV.BAL.dic$global.plot
grid.draw(CV.BAL.dic$global.plot)
### Load data
otu18S <- data.frame(otu_table(readRDS("./data/Data/physeq18SFungi.rds")))
methlev <- sample_data(readRDS("./data/Data/physeq18SFungi.rds"))[,"Methane"]
methlev
View(otu18S)
CV.BAL.dic <- selbal.cv(x = otu18S, y = methlev, n.fold = 5, n.iter = 10,
covar = NULL)
methlev
otu18S %>%
colSums()
### Load data
otu18S <- data.frame(otu_table(readRDS("./data/Data/physeq18SFungi.rds"))) %>%
select(!colSums(.)==0)
### Load data
otu18S <- data.frame(otu_table(readRDS("./data/Data/physeq18SFungi.rds"))) %>%
select(!(colSums(.)==0))
colSums(otu18S)
colSums(otu18S)==0
!(colSums(otu18S)==0)
### Load data
otu18S <- data.frame(otu_table(readRDS("./data/Data/physeq18SFungi.rds")))[, !(colSums(otu18S)==0)]
methlev <- sample_data(readRDS("./data/Data/physeq18SFungi.rds"))[,"Methane"][!(colSums(otu18S)==0)]
CV.BAL.dic <- selbal.cv(x = otu18S, y = methlev, n.fold = 5, n.iter = 10,
covar = NULL)
### Load data
otu18S <- data.frame(otu_table(readRDS("./data/Data/physeq18SFungi.rds")))[, (colSums(otu18S)>5)]
methlev <- sample_data(readRDS("./data/Data/physeq18SFungi.rds"))[,"Methane"][(colSums(otu18S)>5)]
colnames(otu18S) == rownames(methlev)
names(methlev)
methlev
methlev <- sample_data(readRDS("./data/Data/physeq18SFungi.rds"))[,"Methane"][(colSums(otu18S)>5)]
methlev
colnames(otu18S)
methlev <- sample_data(readRDS("./data/Data/physeq18SFungi.rds"))[,"Methane"]
otu18S
### Load data
otu18S <- data.frame(otu_table(readRDS("./data/Data/physeq18SFungi.rds")))[, (colSums(otu18S)>0)]
methlev <- sample_data(readRDS("./data/Data/physeq18SFungi.rds"))[,"Methane"]
CV.BAL.dic <- selbal.cv(x = otu18S, y = methlev, n.fold = 5, n.iter = 10,
covar = NULL)
### Load data
otu18S <- data.frame(otu_table(readRDS("./data/Data/physeq18SFungi.rds")))[, (colSums(otu18S)>1)]
### Load data
otu18S <- data.frame(otu_table(readRDS("./data/Data/physeq18SFungi.rds")))[, (colSums(otu18S)>5)]
View(otu18S)
(colSums(otu18S)>5)
### Load data
otu18S <- data.frame(otu_table(readRDS("./data/Data/physeq18SFungi.rds")))
otu18S <- otu18S[, (colSums(otu18S)>0)]
methlev <- sample_data(readRDS("./data/Data/physeq18SFungi.rds"))[,"Methane"]
CV.BAL.dic <- selbal.cv(x = otu18S, y = methlev, n.fold = 5, n.iter = 10,
covar = NULL)
(colSums(otu18S)
colSums(otu18S)
colSums(otu18S)
### Load data
otu18S <- data.frame(otu_table(readRDS("./data/Data/physeq18SFungi.rds")))
otu18S <- otu18S[, (colSums(otu18S)>10)]
colSums(otu18S)
methlev <- sample_data(readRDS("./data/Data/physeq18SFungi.rds"))[,"Methane"]
CV.BAL.dic <- selbal.cv(x = otu18S, y = methlev, n.fold = 5, n.iter = 10,
covar = NULL)
otu18S <- otu18S[, (colSums(otu18S %>%
mutate_all(function(x) if_felse(x>0, 1, 0)))>2)]
### Load data
otu18S <- data.frame(otu_table(readRDS("./data/Data/physeq18SFungi.rds")))
otu18S <- otu18S[, (colSums(otu18S %>%
mutate_all(function(x) if_felse(x>0, 1, 0)))>2)]
# otu18S <-
colSums(otu18S)
lapply(otu18S)
lapply(otu18S, function(x) if_else(x>0, 1, 0))
apply(otu18S, function(x) if_else(x>0, 1, 0))
lapply(otu18S, function(x) if_else(x>0, 1, 0))
data.frame(lapply(otu18S, function(x) if_else(x>0, 1, 0)))
x <- data.frame(lapply(otu18S, function(x) if_else(x>0, 1, 0)))
View(x)
x <- as.data.frame(lapply(otu18S, function(x) if_else(x>0, 1, 0)))
View(x)
as.data.frame(lapply(otu18S, function(x) if_else(x>0, 1, 0)))
View(otu18S)
otu18Sbin <- as.data.frame(lapply(otu18S, function(x) if_else(x>0, 1, 0)))
colSums(otu18Sbin)
otu18S <- otu18S[colSums(otu18Sbin)>2]
otu18S <- otu18S[, colSums(otu18Sbin)>2]
### Load data
otu18S <- data.frame(otu_table(readRDS("./data/Data/physeq18SFungi.rds")))
otu18Sbin <- as.data.frame(lapply(otu18S, function(x) if_else(x>0, 1, 0)))
colSums(otu18Sbin)>2
otu18S <- otu18S[, colSums(otu18Sbin)>2]
colSums(otu18S)
methlev <- sample_data(readRDS("./data/Data/physeq18SFungi.rds"))[,"Methane"]
CV.BAL.dic <- selbal.cv(x = otu18S, y = methlev, n.fold = 5, n.iter = 10,
covar = NULL)
data(sCD14)
x2 <- sCD14[,1:60]
View(x2)
y2 <- sCD14[,61]
y2
### Load data
otu18S <- data.frame(otu_table(readRDS("./data/Data/physeq18SFungi.rds")))
otu18Sbin <- as.data.frame(lapply(otu18S, function(x) if_else(x>0, 1, 0)))
otu18S <- otu18S[, colSums(otu18Sbin)>5]
otu18Sfilt <- otu18S[, colSums(otu18Sbin)>5]
otu18Sfilt <- as.matrix(otu18S[, colSums(otu18Sbin)>5])
### Load data
otu18S <- data.frame(otu_table(readRDS("./data/Data/physeq18SFungi.rds")))
otu18Sbin <- as.data.frame(lapply(otu18S, function(x) if_else(x>0, 1, 0)))
otu18Sfilt <- as.matrix(otu18S[, colSums(otu18Sbin)>5])
View(otu18Sfilt)
colSums(otu18Sfilt)
colSums(otu18Sbin)
methlev <- sample_data(readRDS("./data/Data/physeq18SFungi.rds"))[,"Methane"]
CV.BAL.dic <- selbal.cv(x = otu18Sfilt, y = methlev, n.fold = 5, n.iter = 10,
covar = NULL)
modellist <- list()
max(methane)
thresholds <- seq(1, 200, 10)
thresholds <- seq(10, 200, 10)
thresholds
length(tresholds)
