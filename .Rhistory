mutate(Network = factor(Network, levels=legendord)) %>%
group_by(Network) %>%
mutate(meanV = mean(Vulnerability),
method = unlist(str_extract_all(Network, tofind))) %>%
ggplot(aes(y = Vulnerability,
x = reorder(Network, desc(meanV)),
color = factor(method))) +
geom_jitter(size = 0.001, alpha = 1, height=0.1, width=0.2, color = "grey98") +
geom_boxplot(fill = "NA", outlier.shape = NA, width=0.2) +
stat_compare_means(aes(label = ..p.signif..),
comparisons = my_comparisons,
size = 4,
method = "wilcox.test",
color = "gray20",
vjust=0.5,
label.y = c(0.43, 0.3, 0.38),
) +
stat_compare_means(method= "anova",
label.y = 0.49,
label.x = length(attack.robustness.ran)-1.35,
size = 2.2,
color = "black",
fontface = "bold") +
expand_limits(y = 0.50) +  # adjust y axis expansion
theme_bw() +
theme(
# panel.grid.major = element_blank(),
axis.title.x=element_text(margin = margin(t =10), size = 8),
axis.title.y =element_text(margin = margin(r =10), size=8),
axis.text=element_text(size=8),
axis.text.x = element_text(color = c("#4DAF4A" , "#984EA3", "#E41A1C", "#377EB8")),
plot.background = element_blank(),
panel.background = element_rect(fill = "grey90", color = "black"),
panel.grid = element_line(color="white"),
legend.background = element_blank(),
legend.position = "none") +
labs(x = "Network",
y = "Vulnerability (V)",
color = "Network")  +
scale_color_manual(values=c("#4DAF4A" , "#984EA3", "#E41A1C", "#377EB8"))
ggsave("./data/graphs/Fig4A2_8networkattack.tiff" ,
width = 5.1,
height = 5,
units = "cm",
dpi = 1000 )
stack(lapply(attack.robustness.ran, function(l) l[['V.list']])) %>%
rename(Network = ind, Vulnerability = values) %>%
mutate(Network = factor(Network, levels=legendord)) %>%
group_by(Network) %>%
mutate(meanV = mean(Vulnerability),
method = unlist(str_extract_all(Network, tofind))) %>%
ggplot(aes(y = Vulnerability,
x = reorder(Network, desc(meanV)),
color = factor(method))) +
geom_jitter(size = 0.001, alpha = 1, height=0.1, width=0.2, color = "grey98") +
geom_boxplot(fill = "NA", outlier.shape = NA, width=0.2) +
stat_compare_means(aes(label = ..p.signif..),
comparisons = my_comparisons,
size = 4,
method = "wilcox.test",
color = "gray20",
vjust=0.5,
label.y = c(0.43, 0.3, 0.38),
) +
stat_compare_means(method= "anova",
label.y = 0.49,
label.x = length(attack.robustness.ran)-1.35,
size = 2.2,
color = "black",
fontface = "bold") +
expand_limits(y = 0.50) +  # adjust y axis expansion
theme_bw() +
theme(
# panel.grid.major = element_blank(),
axis.title.x= element_blank(),
axis.title.y =element_text(margin = margin(r =10), size=8),
axis.text=element_text(size=8),
axis.text.x = element_text(color = c("#4DAF4A" , "#984EA3", "#E41A1C", "#377EB8")),
plot.background = element_blank(),
panel.background = element_rect(fill = "grey90", color = "black"),
panel.grid = element_line(color="white"),
legend.background = element_blank(),
legend.position = "none") +
labs(x = "Network",
y = "Vulnerability (V)",
color = "Network")  +
scale_color_manual(values=c("#4DAF4A" , "#984EA3", "#E41A1C", "#377EB8"))
ggsave("./data/graphs/Fig4A2_8networkattack.tiff" ,
width = 5.1,
height = 5,
units = "cm",
dpi = 1000 )
source("~/git_repo/coldseepfungi/R/8_networkattack.R")
ggsave("./data/graphs/Fig4A2_8networkattack.tiff" ,
width = 5.5,
height = 5,
units = "cm",
dpi = 1000 )
ggsave("./data/graphs/Fig4A2_8networkattack.tiff" ,
width = 5.5,
height = 4.7,
units = "cm",
dpi = 1000 )
stack(lapply(attack.robustness.ran, function(l) l[['V.list']])) %>%
rename(Network = ind, Vulnerability = values) %>%
mutate(Network = factor(Network, levels=legendord)) %>%
group_by(Network) %>%
mutate(meanV = mean(Vulnerability),
method = unlist(str_extract_all(Network, tofind))) %>%
ggplot(aes(y = Vulnerability,
x = reorder(Network, desc(meanV)),
color = factor(method))) +
geom_jitter(size = 0.001, alpha = 1, height=0.1, width=0.2, color = "grey98") +
geom_boxplot(fill = "NA", outlier.shape = NA, width=0.2) +
stat_compare_means(aes(label = ..p.signif..),
comparisons = my_comparisons,
size = 4,
method = "wilcox.test",
color = "gray20",
vjust=0.5,
label.y = c(0.43, 0.3, 0.38),
) +
stat_compare_means(method= "anova",
label.y = 0.49,
label.x = length(attack.robustness.ran)-1.35,
size = 2.2,
color = "black",
fontface = "bold") +
expand_limits(y = 0.50) +  # adjust y axis expansion
theme_bw() +
theme(
# panel.grid.major = element_blank(),
axis.title.x= element_blank(),
axis.title.y =element_text(margin = margin(r =10), size=8),
axis.text=element_text(size=8),
axis.text.x = element_text(color = c("#4DAF4A" , "#984EA3", "#E41A1C", "#377EB8")),
plot.background = element_blank(),
panel.background = element_rect(fill = "grey90", color = "black"),
panel.grid = element_line(color="white"),
legend.background = element_blank(),
legend.position = "none") +
labs(x = "Network",
y = "Vulnerability (V)",
color = "Network")  +
scale_color_manual(values=c("#4DAF4A" , "#4DAF4A", "#E41A1C", "#377EB8"))
scale_color_manual(values=c("#984EA3" , "#4DAF4A", "#E41A1C", "#377EB8"))
stack(lapply(attack.robustness.ran, function(l) l[['V.list']])) %>%
rename(Network = ind, Vulnerability = values) %>%
mutate(Network = factor(Network, levels=legendord)) %>%
group_by(Network) %>%
mutate(meanV = mean(Vulnerability),
method = unlist(str_extract_all(Network, tofind))) %>%
ggplot(aes(y = Vulnerability,
x = reorder(Network, desc(meanV)),
color = factor(method))) +
geom_jitter(size = 0.001, alpha = 1, height=0.1, width=0.2, color = "grey98") +
geom_boxplot(fill = "NA", outlier.shape = NA, width=0.2) +
stat_compare_means(aes(label = ..p.signif..),
comparisons = my_comparisons,
size = 4,
method = "wilcox.test",
color = "gray20",
vjust=0.5,
label.y = c(0.43, 0.3, 0.38),
) +
stat_compare_means(method= "anova",
label.y = 0.49,
label.x = length(attack.robustness.ran)-1.35,
size = 2.2,
color = "black",
fontface = "bold") +
expand_limits(y = 0.50) +  # adjust y axis expansion
theme_bw() +
theme(
# panel.grid.major = element_blank(),
axis.title.x= element_blank(),
axis.title.y =element_text(margin = margin(r =10), size=8),
axis.text=element_text(size=8),
axis.text.x = element_text(color = c("#4DAF4A" , "#984EA3", "#E41A1C", "#377EB8")),
plot.background = element_blank(),
panel.background = element_rect(fill = "grey90", color = "black"),
panel.grid = element_line(color="white"),
legend.background = element_blank(),
legend.position = "none") +
labs(x = "Network",
y = "Vulnerability (V)",
color = "Network")  +
scale_color_manual(values=c("#984EA3" , "#4DAF4A", "#E41A1C", "#377EB8"))
stack(lapply(attack.robustness.ran, function(l) l[['V.list']])) %>%
rename(Network = ind, Vulnerability = values) %>%
mutate(Network = factor(Network, levels=legendord)) %>%
group_by(Network) %>%
mutate(meanV = mean(Vulnerability),
method = unlist(str_extract_all(Network, tofind))) %>%
ggplot(aes(y = Vulnerability,
x = reorder(Network, desc(meanV)),
color = factor(method))) +
geom_jitter(size = 0.001, alpha = 1, height=0.1, width=0.2, color = "grey98") +
geom_boxplot(fill = "NA", outlier.shape = NA, width=0.2) +
stat_compare_means(aes(label = ..p.signif..),
comparisons = my_comparisons,
size = 4,
method = "wilcox.test",
color = "gray20",
vjust=0.5,
label.y = c(0.43, 0.3, 0.38),
) +
stat_compare_means(method= "anova",
label.y = 0.49,
label.x = length(attack.robustness.ran)-1.35,
size = 2.2,
color = "black",
fontface = "bold") +
expand_limits(y = 0.50) +  # adjust y axis expansion
theme_bw() +
theme(
# panel.grid.major = element_blank(),
axis.title.x= element_blank(),
axis.title.y =element_text(margin = margin(r =10), size=8),
axis.text=element_text(size=8),
axis.text.x = element_text(color = c("#4DAF4A" , "#984EA3", "#E41A1C", "#377EB8")),
plot.background = element_blank(),
panel.background = element_rect(fill = "grey90", color = "black"),
panel.grid = element_line(color="white"),
legend.background = element_blank(),
legend.position = "none") +
labs(x = "Network",
y = "Vulnerability (V)",
color = "Network")  +
scale_color_manual(values=c("#984EA3" , "#4DAF4A", "#377EB8", "#E41A1C"))
stack(lapply(attack.robustness.ran, function(l) l[['V.list']])) %>%
rename(Network = ind, Vulnerability = values) %>%
mutate(Network = factor(Network, levels=legendord)) %>%
group_by(Network) %>%
mutate(meanV = mean(Vulnerability),
method = unlist(str_extract_all(Network, tofind))) %>%
ggplot(aes(y = Vulnerability,
x = reorder(Network, desc(meanV)),
color = factor(method))) +
geom_jitter(size = 0.001, alpha = 1, height=0.1, width=0.2, color = "grey98") +
geom_boxplot(fill = "NA", outlier.shape = NA, width=0.2) +
stat_compare_means(aes(label = ..p.signif..),
comparisons = my_comparisons,
size = 4,
method = "wilcox.test",
color = "gray20",
vjust=0.5,
label.y = c(0.43, 0.3, 0.38),
) +
stat_compare_means(method= "anova",
label.y = 0.49,
label.x = length(attack.robustness.ran)-1.35,
size = 2.2,
color = "black",
fontface = "bold") +
expand_limits(y = 0.50) +  # adjust y axis expansion
theme_bw() +
theme(
# panel.grid.major = element_blank(),
axis.title.x= element_blank(),
axis.title.y =element_text(margin = margin(r =10), size=8),
axis.text=element_text(size=8),
axis.text.x = element_text(color = c("#4DAF4A" , "#984EA3", "#E41A1C", "#377EB8")),
plot.background = element_blank(),
panel.background = element_rect(fill = "grey90", color = "black"),
panel.grid = element_line(color="white"),
legend.background = element_blank(),
legend.position = "none") +
labs(x = "Network",
y = "Vulnerability (V)",
color = "Network")  +
scale_color_manual(values=c("#984EA3" , "#4DAF4A", "#377EB8", "#377EB8"))
stack(lapply(attack.robustness.ran, function(l) l[['V.list']])) %>%
rename(Network = ind, Vulnerability = values) %>%
mutate(Network = factor(Network, levels=legendord)) %>%
group_by(Network) %>%
mutate(meanV = mean(Vulnerability),
method = unlist(str_extract_all(Network, tofind))) %>%
ggplot(aes(y = Vulnerability,
x = reorder(Network, desc(meanV)),
color = factor(method))) +
geom_jitter(size = 0.001, alpha = 1, height=0.1, width=0.2, color = "grey98") +
geom_boxplot(fill = "NA", outlier.shape = NA, width=0.2) +
stat_compare_means(aes(label = ..p.signif..),
comparisons = my_comparisons,
size = 4,
method = "wilcox.test",
color = "gray20",
vjust=0.5,
label.y = c(0.43, 0.3, 0.38),
) +
stat_compare_means(method= "anova",
label.y = 0.49,
label.x = length(attack.robustness.ran)-1.35,
size = 2.2,
color = "black",
fontface = "bold") +
expand_limits(y = 0.50) +  # adjust y axis expansion
theme_bw() +
theme(
# panel.grid.major = element_blank(),
axis.title.x= element_blank(),
axis.title.y =element_text(margin = margin(r =10), size=8),
axis.text=element_text(size=8),
axis.text.x = element_text(color = c("#4DAF4A" , "#984EA3", "#E41A1C", "#377EB8")),
plot.background = element_blank(),
panel.background = element_rect(fill = "grey90", color = "black"),
panel.grid = element_line(color="white"),
legend.background = element_blank(),
legend.position = "none") +
labs(x = "Network",
y = "Vulnerability (V)",
color = "Network")  +
scale_color_manual(values=c("#4DAF4A" , "#984EA3", "#E41A1C", "#377EB8"))
stack(lapply(attack.robustness.ran, function(l) l[['V.list']])) %>%
rename(Network = ind, Vulnerability = values) %>%
mutate(Network = factor(Network, levels=legendord)) %>%
group_by(Network) %>%
mutate(meanV = mean(Vulnerability),
method = unlist(str_extract_all(Network, tofind))) %>%
ggplot(aes(y = Vulnerability,
x = reorder(Network, desc(meanV)),
color = factor(method))) +
geom_jitter(size = 0.001, alpha = 1, height=0.1, width=0.2, color = "grey98") +
geom_boxplot(fill = "NA", outlier.shape = NA, width=0.2) +
stat_compare_means(aes(label = ..p.signif..),
comparisons = my_comparisons,
size = 4,
method = "wilcox.test",
color = "gray20",
vjust=0.5,
label.y = c(0.43, 0.3, 0.38),
) +
stat_compare_means(method= "anova",
label.y = 0.49,
label.x = length(attack.robustness.ran)-1.35,
size = 2.2,
color = "black",
fontface = "bold") +
expand_limits(y = 0.50) +  # adjust y axis expansion
theme_bw() +
theme(
# panel.grid.major = element_blank(),
axis.title.x= element_blank(),
axis.title.y =element_text(margin = margin(r =10), size=8),
axis.text=element_text(size=8),
axis.text.x = element_text(color = c("#984EA3" , "#4DAF4A", "#E41A1C", "#377EB8")),
plot.background = element_blank(),
panel.background = element_rect(fill = "grey90", color = "black"),
panel.grid = element_line(color="white"),
legend.background = element_blank(),
legend.position = "none") +
labs(x = "Network",
y = "Vulnerability (V)",
color = "Network")  +
scale_color_manual(values=c("#4DAF4A" , "#984EA3", "#E41A1C", "#377EB8"))
axis.text.x = element_text(color = c("#984EA3" , "#4DAF4A", "#377EB8", "#E41A1C")),
stack(lapply(attack.robustness.ran, function(l) l[['V.list']])) %>%
rename(Network = ind, Vulnerability = values) %>%
mutate(Network = factor(Network, levels=legendord)) %>%
group_by(Network) %>%
mutate(meanV = mean(Vulnerability),
method = unlist(str_extract_all(Network, tofind))) %>%
ggplot(aes(y = Vulnerability,
x = reorder(Network, desc(meanV)),
color = factor(method))) +
geom_jitter(size = 0.001, alpha = 1, height=0.1, width=0.2, color = "grey98") +
geom_boxplot(fill = "NA", outlier.shape = NA, width=0.2) +
stat_compare_means(aes(label = ..p.signif..),
comparisons = my_comparisons,
size = 4,
method = "wilcox.test",
color = "gray20",
vjust=0.5,
label.y = c(0.43, 0.3, 0.38),
) +
stat_compare_means(method= "anova",
label.y = 0.49,
label.x = length(attack.robustness.ran)-1.35,
size = 2.2,
color = "black",
fontface = "bold") +
expand_limits(y = 0.50) +  # adjust y axis expansion
theme_bw() +
theme(
# panel.grid.major = element_blank(),
axis.title.x= element_blank(),
axis.title.y =element_text(margin = margin(r =10), size=8),
axis.text=element_text(size=8),
axis.text.x = element_text(color = c("#984EA3" , "#4DAF4A", "#377EB8", "#E41A1C")),
plot.background = element_blank(),
panel.background = element_rect(fill = "grey90", color = "black"),
panel.grid = element_line(color="white"),
legend.background = element_blank(),
legend.position = "none") +
labs(x = "Network",
y = "Vulnerability (V)",
color = "Network")  +
scale_color_manual(values=c("#4DAF4A" , "#984EA3", "#E41A1C", "#377EB8"))
ggsave("./data/graphs/Fig4A2_8networkattack.tiff" ,
width = 5.5,
height = 4.7,
units = "cm",
dpi = 1000 )
plot.robustness(attack.robustness.ran, vulnerability = F) +
theme(axis.text = element_text(size = 8),
axis.title.x = element_text(size = 12, vjust = -4),
axis.title.y = element_text(size = 12, vjust= 4),
plot.margin = margin(0.5,0,0.8,0.8, "cm"),
legend.background = element_blank())
plot.robustness(attack.robustness.ran, vulnerability = F) +
theme(axis.text = element_text(size = 8),
axis.title.x = element_text(size = 12, vjust = -4),
axis.title.y = element_text(size = 12, vjust= 4),
panel.border = element_rect(size = 1),
plot.margin = margin(0.5,0,0.8,0.8, "cm"),
legend.background = element_blank())
ggsave("./data/graphs/Fig4A1_8networkattack.tiff" ,
width = 18,
height = 15,
units = "cm",
dpi = 1000 )
library(tidyverse)
library(phyloseq)
library(igraph)
library(ggridges)
library('brainGraph')
set.seed(123)
### UPLOAD FILES ###
files <- list.files(path = "./data/networks/filtered/nonweighted",
full.names = TRUE)
networklist <- list()
remove.0v <- function(ingraph) {
outgraph <- ingraph
cat("\nOriginal Graph Vertices: ", length(V(ingraph)))
components <- igraph::clusters(ingraph, mode="weak")
biggest_cluster_id <- which.max(components$csize)
vert_ids <- V(ingraph)[components$membership != biggest_cluster_id]
outgraph <- delete.vertices(outgraph, vert_ids) # remove them
cat("\nFiltered Graph Vertices: ", length(V(outgraph)), "\n")
return(outgraph)
}
for (file in files){
networklist <- append(networklist,
list(remove.0v(readRDS(file = file))))
}
### UPLOAD FILES ###
files <- list.files(path = "./data/networks/filtered/nonweighted",
full.names = TRUE)
files
files[-"./data/networks/filtered/nonweighted/Fu_igraphSLR_igraph.rds" ]
remove(files,"./data/networks/filtered/nonweighted/Fu_igraphSLR_igraph.rds")
files
### UPLOAD FILES ###
files <- list.files(path = "./data/networks/filtered/nonweighted",
full.names = TRUE)
files
"./data/networks/filtered/nonweighted/Fu_igraphSLR_igraph.rds"  %in% files
files =="./data/networks/filtered/nonweighted/Fu_igraphSLR_igraph.rds"
files <- files[files !="./data/networks/filtered/nonweighted/Fu_igraphSLR_igraph.rds"]
#LOAD_DATA####################################
files <- list.files("./data/networks/filtered/nonweighted/",
recursive=FALSE,
full.names = TRUE)
files <- files[files !="./data/networks/filtered/nonweighted/Fu_igraphSLR_igraph.rds"]
files
files <- files[files !="./data/networks/filtered/nonweighted/Fu_igraphSLR_igraph.rds"]
files
#LOAD_DATA####################################
files <- list.files("./data/networks/filtered/nonweighted/",
recursive=FALSE,
full.names = TRUE)
files <- files[files !="./data/networks/filtered/nonweighted/Fu_igraphSLR_igraph.rds"]
files !="./data/networks/filtered/nonweighted/Fu_igraphSLR_igraph.rds"
files
### UPLOAD FILES ###
files <- list.files(path = "./data/networks/filtered/nonweighted",
full.names = TRUE)
files
#LOAD_DATA####################################
files <- list.files("./data/networks/filtered/nonweighted/",
full.names = TRUE)
files
#LOAD_DATA####################################
files <- list.files("./data/networks/filtered/nonweighted",
full.names = TRUE)
files
files <- files[files !="./data/networks/filtered/nonweighted/Fu_igraphSLR_igraph.rds"]
filesshort <- list.files("./data/networks/filtered/nonweighted",
recursive=FALSE,
full.names = FALSE)
filesshort
files <- files[files !=".Fu_igraphSLR_igraph.rds" "]
graph.list <- list()
for (i in 1:length(files)){
graph.list <- append(graph.list, list(readRDS(files[i])))
names(graph.list)[i] <- filesshort[i]
}
# add custom names to the graphs
names(graph.list) <- c("B", "BA",
files <- files[files !=".Fu_igraphSLR_igraph.rds"]
#LOAD_DATA####################################
files <- list.files("./data/networks/filtered/nonweighted",
full.names = TRUE)
files <- files[files !="./data/networks/filtered/nonweighted/Fu_igraphSLR_igraph.rds"]
filesshort <- list.files("./data/networks/filtered/nonweighted",
recursive=FALSE,
full.names = FALSE)
filesshort <- files[files !=".Fu_igraphSLR_igraph.rds"]
source("~/git_repo/coldseepfungi/R/8_networkattack.R")
source("~/git_repo/coldseepfungi/R/9_networkeffic.R")
source("~/git_repo/coldseepfungi/R/9_networkeffic.R")
